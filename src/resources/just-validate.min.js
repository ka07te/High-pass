"use strict"; function _defineProperty(e, t, i) { return ( t in e ? Object.defineProperty(e, t, { value: i, enumerable: !0, configurable: !0, writable: !0, }) : (e[t] = i), e ); } var _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) { return typeof e; } : function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e; }; !(function () { for ( var e = ["DocumentType", "Element", "CharacterData"], t = function () { null != this.parentNode && this.parentNode.removeChild(this); }, i = 0; i < e.length; i++ ) { var r = e[i]; window[r] && !window[r].prototype.remove && (window[r].prototype.remove = t); } })(), (function (e) { function t() {} function i(e) { if ("object" !== _typeof(this)) throw new TypeError("Promises must be constructed via new"); if ("function" != typeof e) throw new TypeError("not a function"); (this._state = 0), (this._handled = !1), (this._value = void 0), (this._deferreds = []), l(e, this); } function r(e, t) { for (; 3 === e._state; ) e = e._value; return 0 === e._state ? void e._deferreds.push(t) : ((e._handled = !0), void i._immediateFn(function () { var i = 1 === e._state ? t.onFulfilled : t.onRejected; if (null !== i) { var r; try { r = i(e._value); } catch (e) { return void o(t.promise, e); } n(t.promise, r); } else (1 === e._state ? n : o)(t.promise, e._value); })); } function n(e, t) { try { if (t === e) throw new TypeError("A promise cannot be resolved with itself."); if ( t && ("object" === (void 0 === t ? "undefined" : _typeof(t)) || "function" == typeof t) ) { var r = t.then; if (t instanceof i) return (e._state = 3), (e._value = t), void s(e); if ("function" == typeof r) return void l( (function (e, t) { return function () { e.apply(t, arguments); }; })(r, t), e ); } (e._state = 1), (e._value = t), s(e); } catch (t) { o(e, t); } } function o(e, t) { (e._state = 2), (e._value = t), s(e); } function s(e) { 2 === e._state && 0 === e._deferreds.length && i._immediateFn(function () { e._handled || i._unhandledRejectionFn(e._value); }); for (var t = 0, n = e._deferreds.length; t < n; t++) r(e, e._deferreds[t]); e._deferreds = null; } function a(e, t, i) { (this.onFulfilled = "function" == typeof e ? e : null), (this.onRejected = "function" == typeof t ? t : null), (this.promise = i); } function l(e, t) { var i = !1; try { e( function (e) { i || ((i = !0), n(t, e)); }, function (e) { i || ((i = !0), o(t, e)); } ); } catch (e) { if (i) return; (i = !0), o(t, e); } } var u = setTimeout; (i.prototype.catch = function (e) { return this.then(null, e); }), (i.prototype.then = function (e, i) { var n = new this.constructor(t); return r(this, new a(e, i, n)), n; }), (i.all = function (e) { var t = Array.prototype.slice.call(e); return new i(function (e, i) { function r(o, s) { try { if ( s && ("object" === (void 0 === s ? "undefined" : _typeof(s)) || "function" == typeof s) ) { var a = s.then; if ("function" == typeof a) return void a.call( s, function (e) { r(o, e); }, i ); } (t[o] = s), 0 == --n && e(t); } catch (e) { i(e); } } if (0 === t.length) return e([]); for (var n = t.length, o = 0; o < t.length; o++) r(o, t[o]); }); }), (i.resolve = function (e) { return e && "object" === (void 0 === e ? "undefined" : _typeof(e)) && e.constructor === i ? e : new i(function (t) { t(e); }); }), (i.reject = function (e) { return new i(function (t, i) { i(e); }); }), (i.race = function (e) { return new i(function (t, i) { for (var r = 0, n = e.length; r < n; r++) e[r].then(t, i); }); }), (i._immediateFn = ("function" == typeof setImmediate && function (e) { setImmediate(e); }) || function (e) { u(e, 0); }), (i._unhandledRejectionFn = function (e) { "undefined" != typeof console && console && console.warn("Possible Unhandled Promise Rejection:", e); }), (i._setImmediateFn = function (e) { i._immediateFn = e; }), (i._setUnhandledRejectionFn = function (e) { i._unhandledRejectionFn = e; }), "undefined" != typeof module && module.exports ? (module.exports = i) : e.Promise || (e.Promise = i); })(window), (function (e) { e.Promise || (e.Promise = Promise); var t = "required", i = "email", r = "minLength", n = "maxLength", o = "password", s = "phone", a = "remote", l = "strength", u = "function", d = function (e, t) { if ("string" == typeof e) return e; var i = "post" === t.toLowerCase() ? "" : "?"; return Array.isArray(e) ? i + e .map(function (e) { return e.name + "=" + e.value; }) .join("&") : i + Object.keys(e) .map(function (t) { return t + "=" + e[t]; }) .join("&"); }, c = function (e) { var t = e.url, i = e.method, r = e.data, n = e.debug, o = e.callback, s = e.error; if (n) o("test"); else { var a = !1 !== e.async, l = new XMLHttpRequest(), u = d(r, "get"), c = null; "post" === i.toLowerCase() && ((c = d(r, "post")), (u = "")), l.open(i, t + u, a), l.setRequestHeader( "Content-Type", "application/x-www-form-urlencoded" ), (l.onreadystatechange = function () { 4 === this.readyState && (200 === this.status ? o(this.responseText) : s && s(this.responseText)); }), l.send(c); } }, h = function (e, t) { (this.options = t || {}), (this.rules = this.options.rules || {}), (this.messages = this.options.messages || void 0), (this.colorWrong = this.options.colorWrong || "#FF5C00"), (this.result = {}), (this.elements = []), (this.tooltip = this.options.tooltip || {}), (this.tooltipFadeOutTime = this.tooltip.fadeOutTime || 5e3), (this.tooltipFadeOutClass = this.tooltip.fadeOutClass || "just-validate-tooltip-hide"), (this.tooltipSelectorWrap = document.querySelectorAll( this.tooltip.selectorWrap ).length ? document.querySelectorAll(this.tooltip.selectorWrap) : document.querySelectorAll(".just-validate-tooltip-container")), (this.bindHandlerKeyup = this.handlerKeyup.bind(this)), (this.submitHandler = this.options.submitHandler || void 0), (this.invalidFormCallback = this.options.invalidFormCallback || void 0), (this.promisesRemote = []), (this.isValidationSuccess = !1), (this.focusWrongField = this.options.focusWrongField || !1), (this.REGEXP = { email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/, zip: /^\d{5}(-\d{4})?$/, phone: /^([0-9]( |-)?)?(\(?[0-9]{3}\)?|[0-9]{3})( |-)?([0-9]{3}( |-)?[0-9]{4}|[a-zA-Z0-9]{7})$/, password: /[^\w\d]*(([0-9]+.*[A-Za-z]+.*)|[A-Za-z]+.*([0-9]+.*))/, strengthPass: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d]/, name: /^[A-zА-яЁё]+$/, }), (this.DEFAULT_REMOTE_ERROR = "Недопустимый формат"), (this.state = { tooltipsTimer: null }), this.setForm(document.querySelector(e)); }; (h.prototype = { defaultRules: { email: { required: !0, email: !0 }, name: { required: !0, name: !0 }, text: { required: !0, maxLength: 300, minLength: 5 }, password: { required: !0, password: !0, minLength: 4, maxLength: 8 }, zip: { required: !0, zip: !0 }, phone: { phone: !0 }, }, defaultMessages: { required: "Недопустимый формат", email: "Недопустимый формат", name: "Недопустимый формат", maxLength: "Поле должно содержать не более 30 символов ", minLength: "Поле должно содержать минимум 2 символа ", password: "Password is not valid", remote: "Email already exists", strength: "Password must contents at least one uppercase letter, one lowercase letter and one number", function: "Function returned false", }, handlerKeyup: function (e) { var t = e.target, i = { name: t.getAttribute("data-validate-field"), value: t.value }; delete this.result[i.name], this.validateItem({ name: i.name, value: i.value, group: [], isKeyupChange: !0, }), this.renderErrors(); }, setterEventListener: function (e, t, i, r) { switch (("keyup" === t && (i = this.bindHandlerKeyup), r)) { case "add": e.addEventListener(t, i); break; case "remove": e.removeEventListener(t, i); } }, getElementsRealValue: function () { for ( var e = this.$form.querySelectorAll("*"), t = void 0, i = {}, r = 0, n = e.length; r < n; ++r ) if ((t = e[r].getAttribute("name"))) { if ("checkbox" === e[r].type) { i[t] = e[r].checked; continue; } i[t] = e[r].value; } return i; }, validationFailed: function () { this.invalidFormCallback && this.invalidFormCallback(this.result); var e = document.querySelector(".js-validate-error-field"); this.focusWrongField && e && e.focus && e.focus(); }, validationSuccess: function () { if (0 === Object.keys(this.result).length) { if (((this.isValidationSuccess = !1), this.submitHandler)) { var e = this.getElementsRealValue(); return void this.submitHandler(this.$form, e, c); } this.$form.submit(); } }, setForm: function (e) { var t = this; (this.$form = e), this.$form.setAttribute("novalidate", "novalidate"), this.$form.addEventListener("submit", function (e) { return ( e.preventDefault(), (t.result = []), t.getElements(), t.promisesRemote.length ? void Promise.all(t.promisesRemote).then(function () { (t.promisesRemote = []), t.isValidationSuccess ? t.validationSuccess() : t.validationFailed(); }) : void (t.isValidationSuccess ? t.validationSuccess() : t.validationFailed()) ); }); }, isEmail: function (e) { return this.REGEXP.email.test(e); }, isZip: function (e) { return this.REGEXP.zip.test(e); }, isPhone: function (e) { return this.REGEXP.phone.test(e); }, isPassword: function (e) { return this.REGEXP.password.test(e); }, isEmpty: function (e) { var t = e; return e.trim && (t = e.trim()), !t; }, checkLengthMax: function (e, t) { return e.length <= t; }, checkLengthMin: function (e, t) { return e.length >= t; }, checkStrengthPass: function (e) { return this.REGEXP.strengthPass.test(e); }, getElements: function () { var e = this, t = this.$form.querySelectorAll("[data-validate-field]"); this.elements = []; for ( var i = function (i, r) { var n = t[i], o = n.getAttribute("data-validate-field"), s = n.value, a = !1, l = []; if ( ("checkbox" === n.type && ((s = n.checked || ""), n.addEventListener("change", function (t) { var i = t.target, r = { name: i.getAttribute("data-validate-field"), value: i.checked, }; delete e.result[r.name], e.validateItem({ name: r.name, value: r.value, group: [], }), e.renderErrors(); })), "radio" === n.type) ) { var u = e.elements.filter(function (e) { if (e.name === o) return e; })[0]; u ? (u.group.push(n.checked), (a = !0)) : l.push(n.checked), n.addEventListener("change", function (t) { var i = t.target, r = { name: i.getAttribute("data-validate-field"), value: i.checked, }; delete e.result[r.name], e.validateItem({ name: r.name, value: r.value, group: [], }), e.renderErrors(); }); } e.setterEventListener(n, "keyup", e.handlerKeyup, "add"), a || e.elements.push({ name: o, value: s, group: l }); }, r = 0, n = t.length; r < n; ++r ) i(r); this.validateElements(); }, validateRequired: function (e) { return !this.isEmpty(e); }, validateEmail: function (e) { return this.isEmail(e); }, validatePhone: function (e) { return this.isPhone(e); }, validateMinLength: function (e, t) { return this.checkLengthMin(e, t); }, validateMaxLength: function (e, t) { return this.checkLengthMax(e, t); }, validateStrengthPass: function (e) { return this.checkStrengthPass(e); }, validatePassword: function (e) { return this.isPassword(e); }, validateZip: function (e) { return this.isZip(e); }, validateRemote: function (e) { var t = e.value, i = e.name, r = e.url, n = e.successAnswer, o = e.sendParam, s = e.method; return new Promise(function (e) { c({ url: r, method: s, data: _defineProperty({}, o, t), async: !0, callback: function (t) { t.toLowerCase() === n.toLowerCase() && e("ok"), e({ type: "incorrect", name: i }); }, error: function () { e({ type: "error", name: i }); }, }); }); }, generateMessage: function (e, t, i) { var r = this.messages || this.defaultMessages, n = (r[t] && r[t][e]) || (this.messages && "string" == typeof this.messages[t] && r[t]) || this.defaultMessages[e] || this.DEFAULT_REMOTE_ERROR; i && (n = n.replace(":value", i.toString())), (this.result[t] = { message: n }); }, validateElements: function () { var e = this; return ( this.lockForm(), this.elements.forEach(function (t) { e.validateItem({ name: t.name, value: t.value, group: t.group }); }), this.promisesRemote.length ? void Promise.all(this.promisesRemote).then(function (t) { t.forEach(function (t) { return "ok" === t ? void e.renderErrors() : ("error" === t.type && alert("Server error occured. Please try later."), e.generateMessage(a, t.name), void e.renderErrors()); }); }) : void this.renderErrors() ); }, validateItem: function (e) { var d = this, c = e.name, h = e.group, f = e.value, m = e.isKeyupChange, v = this.rules[c] || this.defaultRules[c] || !1; if (v) for (var p in v) { var g = v[p]; if (p !== t && p !== u && "" == f) return; switch (p) { case u: if ("function" != typeof g) break; if (g(c, f)) break; return void this.generateMessage(u, c, g); case t: if (!g) break; if (h.length) { var y = !1; if ( (h.forEach(function (e) { d.validateRequired(e) && (y = !0); }), y) ) break; } else if (this.validateRequired(f)) break; return void this.generateMessage(t, c); case i: if (!g) break; if (this.validateEmail(f)) break; return void this.generateMessage(i, c); case r: if (!g) break; if (this.validateMinLength(f, g)) break; return void this.generateMessage(r, c, g); case n: if (!g) break; if (this.validateMaxLength(f, g)) break; return void this.generateMessage(n, c, g); case s: if (!g) break; if (this.validatePhone(f)) break; return void this.generateMessage(s, c); case o: if (!g) break; if (this.validatePassword(f)) break; return void this.generateMessage(o, c); case l: if ( !g || "object" !== (void 0 === g ? "undefined" : _typeof(g)) ) break; if (g.default && this.validateStrengthPass(f)) break; if (g.custom) { var b = void 0; try { b = new RegExp(g.custom); } catch (e) { (b = this.REGEXP.strengthPass), console.error( "Custom regexp for strength rule is not valid. Default regexp was used." ); } if (b.test(f)) break; } return void this.generateMessage(l, c); case "zip": if (!g) break; if (this.validateZip(f)) break; return void this.generateMessage("zip", c); case a: if (m) break; if (!g) break; var E = g.url, w = g.successAnswer, k = g.method, _ = g.sendParam, P = this.$form.querySelector( 'input[data-validate-field="' + c + '"]' ); return ( this.setterEventListener( P, "keyup", this.handlerKeyup, "remove" ), void this.promisesRemote.push( this.validateRemote({ name: c, value: f, url: E, method: k, sendParam: _, successAnswer: w, }) ) ); } } }, clearErrors: function () { for ( var e = document.querySelectorAll(".js-validate-error-label"), t = 0, i = e.length; t < i; ++t ) e[t].remove(); for ( var r = 0, n = (e = document.querySelectorAll(".js-validate-error-field")) .length; r < n; ++r ) e[r].classList.remove("js-validate-error-field"), (e[r].style.border = ""), (e[r].style.color = ""); }, renderErrors: function () { var e = this; if ( (this.clearErrors(), this.unlockForm(), (this.isValidationSuccess = !1), 0 !== Object.keys(this.result).length) ) { for (var t in this.result) { var i = this.result[t].message, r = this.$form.querySelectorAll( '[data-validate-field="' + t + '"]' ), n = r[r.length - 1], o = document.createElement("div"); if ( ((o.innerHTML = i), (o.className = "js-validate-error-label"), o.setAttribute("style", "color: " + this.colorWrong), (n.style.border = "1px solid " + this.colorWrong), (n.style.color = "" + this.colorWrong), n.classList.add("js-validate-error-field"), "checkbox" === n.type || "radio" === n.type) ) { var s = document.querySelector( 'label[for="' + n.getAttribute("id") + '"]' ); "label" === n.parentNode.tagName.toLowerCase() ? n.parentNode.parentNode.insertBefore(o, null) : s ? s.parentNode.insertBefore(o, s.nextSibling) : n.parentNode.insertBefore(o, n.nextSibling); } else n.parentNode.insertBefore(o, n.nextSibling); } this.tooltipSelectorWrap.length && (this.state.tooltipsTimer = setTimeout(function () { e.hideTooltips(); }, this.tooltipFadeOutTime)); } else this.isValidationSuccess = !0; }, hideTooltips: function () { var e = this; document .querySelectorAll(".js-validate-error-label") .forEach(function (t) { t.classList.add(e.tooltipFadeOutClass); }), (this.state.tooltipsTimer = null); }, lockForm: function () { for ( var e = this.$form.querySelectorAll( "input, textarea, button, select" ), t = 0, i = e.length; t < i; ++t ) e[t].setAttribute("disabled", "disabled"), (e[t].style.pointerEvents = "none"), (e[t].style.webitFilter = "grayscale(100%)"), (e[t].style.filter = "grayscale(100%)"); }, unlockForm: function () { for ( var e = this.$form.querySelectorAll( "input, textarea, button, select" ), t = 0, i = e.length; t < i; ++t ) e[t].removeAttribute("disabled"), (e[t].style.pointerEvents = ""), (e[t].style.webitFilter = ""), (e[t].style.filter = ""); }, }), (e.JustValidate = h); })(window);